The ```matrix_division``` module
================================

Using ```matrix_divided```
--------------------------

importing matrix_divided module
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Testing a matrix and an integer
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Testing a matrix and a negative integer
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], -3)
    [[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

Testing a regular list and an integer
    >>> matrix_divided([1, 2, 3], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing a tuple and an integer
    >>> matrix_divided((1, 2), 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing a matrix and a string literal
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "hello")
    Traceback (most recent call last):
    TypeError: div must be a number

Testing a matrix and 0
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Testing a matrix with different list sizes and an integer
    >>> matrix_divided([[1, 2, 3, 4, 6], [4, 5, 6]], 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Testing a list of tuples and an integer
    >>> matrix_divided([(1, 2, 3), (4, 5, 6)], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing 2 matrices
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [3, 4, 2]])
    Traceback (most recent call last):
    TypeError: div must be a number
